git merge vs git rebase
git merge і git rebase використовуются для об'єднання змін з двох бренчів, але працюють по різному. 

Git merge є безпечнішою командою, вона допомагає зберегти повну історію проекту, хеші раніше створених коммітів не перезаписуються. 
Легко відслідкувати моменти злиття двох гілок.
Її рекомендовано використовувати для роботи над бренчами, які вже були залиті на віддалений репозиторій і взяті в роботу іншими розробниками. 
Наявність в історії комітів злиття дає можливість дізнатися, коли виконувалася операція merge. 
Але при її використанні історія може виглядати заплутаною та в ній будуть додаткові комміти злиття двох бренчів 
(які будуть мати двох парентів - з однієї та з другої бренчі). Коміти злиття в собі будуть містити контент з двох бренчів, об'єднаний в один.

Одним з головних плюсів використання git rebase є можливість лишити історію чистою, простою та зрозумілою. 
В інтерактивному режимі можна редагувати, об'єднувати, видаляти попередні комміти. Але ця команда перезаписує історію.
Хеші комітів тієї гілки, для якої виконується rebase, будуть в результаті перераховані, так як парентом першого комміту з цієї гілки стане інший комміт. 
Тому цю команду потрібно використовувати з обережністю та не застосовувати для бренчів, над якими ведеться спільна розробка. 
Вона ідеально підходить для бренчі в локальному репозиторії, для редагування історії перед виконанням команди push.

Приклад виконання rebase на скріншоті https://i.imgur.com/JfpWA8g.png
В рамці 1 та 2 підкреслений комміт, з якого створена бренча dev.
А в рамці 3 підкреслений коміт бренчі master, який був доданий у гілку dev після rebase.
